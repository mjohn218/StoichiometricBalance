To run code

./balance_network_dist.exe parms.inp abund.inp PPIedges.txt IIN.txt Probs_abundance.txt [constraints.inp] > run0.out

Inputs:

parms.inp:	     Parameters for the simulation. Includes number of proteins, number of PPIs, minimum number of complexes 
		     each interface must participate in, number of proteins with constrained concentrations, number of random 
		     copy numbers to form distribution with, a flag which determined whether random copy numbers are sampled or 
		     shuffled from input copy numbers, and the alpha scaling parameter
abund.inp:	     Copy numbers of each protein. Also defines which ID each protein has (count starts at 0).
PPIedges.txt:        List of protein-protein interactions
IIN.txt:	     The interface-interaction network. Defines which interfaces are on which proteins and their interactions
Probs_abundance.txt: Yeast concentration distribution. Left columns: bins for copy numbers. Middle column: PMF. Right column: CMF
constraints.inp:     Optional input which determines which proteins will have their concentrations constrained. Default is all 
		     proteins

See example networks for proper formating of inputs.

Code outputs:

cout:		Confirms that correct parameters are read. Prints out solution each time QPSolve is called
CSD.out:	chi-square distances. p-value for real copy numbers at end of file
JSD.out:	Jensen-Shannon distances. p-value for real copy numbers at end of file
SolvedProteins.out:	 Balanced solutions (C_balanced and P_balanced) using C_real as C_0
Means.out:		 P_balanced for each set of starting copy numbers (real and random)
Vars.out:		 Variance of interface copy numbers on each protein for each set of starting copy numbers (real and random)